AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Web App & DB Environment Networking"
        Parameters:
          - vpccidr
          - publicsharedacidr
          - publicsharedbcidr
          - privatesharedacidr
          - privatesharedbcidr
Parameters:
  vpccidr:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16
    Default: 10.20.0.0/16
  publicsharedacidr:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 10.20.1.0/24
  publicsharedbcidr:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 10.20.2.0/24
  privatesharedacidr:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 10.20.3.0/24
  privatesharedbcidr:
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 10.20.4.0/24
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref vpccidr
      Tags:
        - Key: Name
          Value: MyCustomVPC
  SubnetPublicSharedA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref publicsharedacidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyCustomSubnetPublicA
      VpcId: !Ref VPC
  SubnetPublicSharedB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref publicsharedbcidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyCustomSubnetPublicB
      VpcId: !Ref VPC
  SubnetPrivateSharedA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref privatesharedacidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MyCustomSubnetPrivateA
      VpcId: !Ref VPC
  SubnetPrivateSharedB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref privatesharedbcidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MyCustomSubnetPrivateB
      VpcId: !Ref VPC
  IGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: MyCustomIGW
  GatewayAttach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  RouteTablePublic:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: MyCustomRouteTablePublic
  RouteTablePrivateA:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: MyCustomRouteTablePrivateA
  RouteTablePrivateB:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: MyCustomRouteTablePrivateB

  SubnetRouteTableAssociatePublicA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPublicSharedA
  SubnetRouteTableAssociatePublicB:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref SubnetPublicSharedB
  SubnetRouteTableAssociatePrivateA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePrivateA
      SubnetId: !Ref SubnetPrivateSharedA
  SubnetRouteTableAssociatePrivateB:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePrivateB
      SubnetId: !Ref SubnetPrivateSharedB

  RouteDefaultPublic:
    Type: "AWS::EC2::Route"
    DependsOn: GatewayAttach
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref RouteTablePublic
  RouteDefaultPrivateA:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA
      RouteTableId: !Ref RouteTablePrivateA
  RouteDefaultPrivateB:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB
      RouteTableId: !Ref RouteTablePrivateB
  EIPNatGWA:
    DependsOn: GatewayAttach
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  EIPNatGWB:
    DependsOn: GatewayAttach
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  NatGatewayA:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt EIPNatGWA.AllocationId
      SubnetId: !Ref SubnetPublicSharedA
  NatGatewayB:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt EIPNatGWB.AllocationId
      SubnetId: !Ref SubnetPublicSharedB

#VPCID #ElasticIP1/IP2 #SubnetPublicAZ1/AZ2 #SubnetPrivateAZ1/AZ2 #PublicSG #PrivateSG
Outputs:
  vpcid:
    Description: ID of Shared Infrastructure VPC
    Value: !Ref VPC
    Export: # added to export
      Name: shared-infrastructure-vpcid
  PublicSharedAZ1cidr:
    Description: Public AZ-1 shared CIRD address
    Value: !Ref publicsharedacidr
    Export: # added to export
      Name: public-shared-a-cidr
  PublicSharedAZ2cidr:
    Description: Public AZ-2 shared CIRD address
    Value: !Ref publicsharedbcidr
    Export: # added to export
      Name: public-shared-b-cidr
  PrivateSharedAZ1cidr:
    Description: Private AZ-1 shared CIRD address
    Value: !Ref privatesharedacidr
    Export: # added to export
      Name: private-shared-a-cidr
  PrivateSharedAZ2cidr:
    Description: Private AZ-2 shared CIRD address
    Value: !Ref privatesharedbcidr
    Export: # added to export
      Name: private-shared-b-cidr
  subnetpublicshareda:
    Description: ID of SubnetPublicSharedA
    Value: !Ref SubnetPublicSharedA
    Export: # added to export
      Name: shared-infrastructure-subnetpublicshared-a
  subnetpublicsharedb:
    Description: ID of SubnetPublicSharedB
    Value: !Ref SubnetPublicSharedB
    Export: # added to export
      Name: shared-infrastructure-subnetpublicshared-b
  subnetprivateshareda:
    Description: ID of SubnetPrivateSharedA
    Value: !Ref SubnetPrivateSharedA
    Export: # added to export
      Name: shared-infrastructure-subnetprivateshared-a
  subnetprivatesharedb:
    Description: ID of SubnetPrivateSharedB
    Value: !Ref SubnetPrivateSharedB
    Export: # added to export
      Name: shared-infrastructure-subnetprivateshared-b
  natgatewayaid:
    Description: ID of NAT Gateway A
    Value: !Ref NatGatewayA
  natgatewaybid:
    Description: ID of NAT Gateway B
    Value: !Ref NatGatewayB
  publicroutetable:
    Description: ID of Public Route Table
    Value: !Ref RouteTablePublic
    Export: # added to export
      Name: shared-infrastructure-public-routetable
  privateroutetablea:
    Description: ID of Private Route Table - A
    Value: !Ref RouteTablePrivateA
    Export: # added to export
      Name: shared-infrastructure-private-routetablea
  privateroutetableb:
    Description: ID of Private Route Table - B
    Value: !Ref RouteTablePrivateB
    Export: # added to export
      Name: shared-infrastructure-private-routetableb
